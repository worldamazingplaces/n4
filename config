RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA R^ARHA >A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2CM\YHB\ OVMEOTMBJMM^M\WMV^U@%UA%FC6Q@F[SAWROPRHA#A\P
AJP&#PORPYRHL_]] 0MJFWCM	OEOU@%A\RV ^EOBC@QDMD^TMWQ6QRHP\	APYR 
PORPYR 6R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#Q^MJJSO  
^T	OV ^EO
\\
\ \\WMV^U@%UA%FC6Q@F[SAWROPRHA6PORPYR4*R^A RHA J]LNN#P^MJFWCM	OEOU@%A\RV ^EO 	GWAMD^TMWQ6QRHP\	APYR'R(R^ARHA70A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2GM\ YHB\ OVMEOTMBJ^^^\	MD^TMWQ6WP6UA'BBWHQPDP\	APYR<R^ARHA>>A\PAJP	Y_] _
_
2GM\YDFPOMTMFB4R^CEOTMBRA@MD^TMWQ6QRHP\	APYR>A\P
AJP/%PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0
MJJSO  
^T	OV ^EO\ AMM MP\MMD^TMWQ6WP6UA'BBWHQPDP\	APYR'R0A\P
AJP6#PORPYRHL_]] 0
MJFWCM	OEOU@%A\RV ^EO  ^F\E OFB4@AJA^RAJP%A\P
AJP%"PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0	\\  ^H[@M	ME  
^T	MV^QBJ^^^AM^FWE \\WMV^U@%UA%FC6Q@F[SAWROPRHA7	PORPYR6&R^A RHA J]LNN#MM\ YDFPOMTMFB4R^CEOTMA\WMV^U@%SC[ROPRHA7
PORPYR5&R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\\  ^H[@M	ME  
^T	MV^^^^EM^

\WMV^U@%UA%FC6Q@F[SAWROPRHA4PORPYR6(R^A RHA J]LNN#^^MJFWCM	OEOU@%A\RV ^EO C^F\E OFB4@AJA^RAJP! 
PORPYR0$R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#
\\  ^H[@M	ME  
^T	MV^ MM\
\^MD^TMWQ6WP6UA'BBWHQPDP\	APYR;R^ARHA9&A\PAJP	Y_] _
_
2^^MJFWCM	OEOU@%A\RV ^EO^F\E OFB4@AJA^RAJP A\P
AJP 1PORPYRHL_]] 0 ^^MJFWCM	OEOU@%A\RV ^EO\WMV^U@%SC[ROPRHA<R^ARHA<&A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2MM\ YHB\ OVMEOTMM M^^^GAM^WMMD^TMWQ6WP6UA'BBWHQPDP\	APYR? PORPYR?;R^A RHA J]LNN#
\\  ^HWDA\  
^V ^ WQ6CMAT	MV^
@MD^TMWQ6QRHP\	APYR!
 PORPYR!$R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#	^^MJJSO  
^T	OV ^EOMACBJ^Q\ \\MM ^\WMV^U@%UA%FC6Q@F[SAWROPRHA#
A\P
AJP 8PORPYRHL_]] 0
^^MJFWCM	OEOU@%A\RV ^EOB MD^TMWQ6QRHP\	APYR;
PORPYR;'R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#MM\ YHB\ OVMEOTMM\\ \\^^^\ MD^TMWQ6WP6UA'BBWHQPDP-^AAJ)A Y_]MM_
]D]_
PORJ]L^] 
_W__L_LR/