RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA#A\P
AJP&#PORPYRHL_]] 0MJFWCM	OEOU@%A\RV ^EO CKMCCDME OFB4@AJA^RAJP1A\P
AJP1%PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0B\  ^H[@M	ME  
^T	MV^MM MM ^M^ \ M M MCCDME OFB4FC4WP4@SDJ@CFA^RAJP%R^ARHA6;A\PAJP	Y_] _
_
2AM\ YDFPOMTMFB4R^CEOTMCR^ARF^ V^U@%SC[ROPRHA%
P9
A\P
AJP$2PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0E\  ^H[@M	ME  
^T	MV^ M M
\
\M^

\MCCDME OFB4FC4WP4@SDJ@CFA^RAJP- PORPYR</R^A RHA J]LNN#V^MJFWCM	OEOU@%A\RV ^EOG  B\PAW\TMWQ6QRHP\	APYR>A\P
AJP/%PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0
MJJSO  
^T	OV ^EO\ AMM M^^\\
\PAW\TMWQ6WP6UA'BBWHQPDP\	APYR'R0A\P
AJP6#PORPYRHL_]] 0
MJFWCM	OEOU@%A\RV ^EO  @\PAW\TMWQ6QRHP\	APYR4 PORPYR41R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#
^^MJJSO  
^T	OV ^EO M^^^AM^FWE \\
\PAW\TMWQ6WP6UA'BBWHQPDP\	APYR5A\P
AJP'5PORPYRHL_]] 0^^MJFWCM	OEOU@%A\RV ^EO^ARF^ V^U@%SC[ROPRHA7
PORPYR5&R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\\  ^H[@M	ME  
^T	MV^^^^M M  ^^\
\PAW\TMWQ6WP6UA'BBWHQPDP\	APYR6A\P
AJP';PORPYRHL_]] 0\\  ^HWDA\  
^V ^ WQ6CMAT	MV^ MCCDME OFB4@AJA^RAJP! 
PORPYR0$R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#
\\  ^H[@M	ME  
^T	MV^ MM^\
\M\ \ M MCCDME OFB4FC4WP4@SDJ@CFA^RAJP*	PORPYR;7R^A RHA J]LNN#\\  ^HWDA\  
^V ^ WQ6CMAT	MV^^ARF^ V^U@%SC[ROPRHA3R^ARHA33A\PAJP	Y_] _
_
2\\  ^HWDA\  
^V ^ WQ6CMAT	MV^
\PAW\TMWQ6QRHP\	APYR>

PORPYR>7R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#^^MJJSO  
^T	OV ^EO^^
\\ \
\ M^WMM^^ARF^ V^U@%UA%FC6Q@F[SAWROPRHA=R^ARHA=*A\PAJP	Y_] _
_
2 
	^^MJFWCM	OEOU@%A\RV ^EO 
	 MCCDME OFB4@AJA^RAJP0A\P
AJP07PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0\\  ^H[@M	ME  
^T	MV^ ^CR@[\BMMM^^^M^^ARF^ V^U@%UA%FC6Q@F[SAWROPRHA9R^ARHA96A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2\\  ^H[@M	ME  
^T	MV^\^^^^M MM^^\M MCCDME OFB4FC4WP4@SDJ@CFA^RAJP0
PORPYR1+R^A RHA J]LNN# MM\ YDFPOMTMFB4R^CEOTM
 MCCDME OFB4@AJA^RAJP3A\P
AJP3<PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0A\  ^H[@M	ME  
^T	MV^^\M^^\\^^\PAW\TMWQ6WP6UA'BBWHQPDP-^AAJ)A Y_]MM_
]D]_
PORJ]L^] 
_W__L_LR/