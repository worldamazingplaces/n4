RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA R^ARHA >A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2EM\ YHB\ OVMEOTMJFMFG^
ME OFB4FC4WP4@SDJ@BJA^RAJP0 
PORPYR70R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#U^MJJSO  
^T	OV ^EO\[C\@^
ME OFB4FC4WP4@SDJ@BEA^RAJP1A\P
AJP1%PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0E\  ^H[@M	ME  
^T	MV^@ZJMAM \TMWQ6WP6UA'BBWHQQFP\	APYR;R^ARHA9&A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2FM\ YHB\ OVMEOTM C\QHM \TMWQ6WP6UA'BBWHQQEP\	APYR4
A\P
AJP%9PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0C\  ^H[@M	ME  
^T	MV^@KB\^
ME OFB4FC4WP4@SDJ@BFA^RAJP0
PORPYR1+R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\ _ ]QM M JJSO  
^T	OV ^EOPBE^Q^
ME OFB4FC4WP4@SDJ@CFA^RAJP6C;PORPYR5!R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#W^MJJSO  
^T	OV ^EOPBJ^@QB^
ME OFB4FC4WP4@SDJ@B@A^RAJP6C;PORPYR5!R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#Q^MJJSO  
^T	OV ^EOSEMB^
ME OFB4FC4WP4@SDJ@BBA^RAJP0A\P
AJP05PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0 CMN_B 	 ^\YHB\ OVMEOTMMACM \TMWQ6WP6UA'BBWHQPBP\	APYR<R^ARHA>>A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2  ^H[@M	ME  
^T	MV^BR\@M \TMWQ6WP6UA'BBWHQQIP\	APYR!
 PORPYR!$R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#A\ _ ]QM ^H[@M	ME  
^T	MV^^\	^ V^U@%UA%FC6Q@F[SASROPRHA<PORPYR>6R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\YHB\ OVMEOTMAH@M	M \TMWQ6WP6UA'BBWHQP@P\	APYR'R0A\P
AJP6#PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0A\  ^H[@M	ME  
^T	MV^CMI@^
ME OFB4FC4WP4@SDJ@AKA^RAJP.

A\P
AJP.(PORPYRHL_]] 0 
MN_B 	 ^ ^HWDA\  
^V ^ WQ6CMAT	MV^I[\	^ V^U@%SC[ROPRHA<R^ARHA<&A\PAJP	Y_] _
_
2R^]N@
\	
M JFWCM	OEOU@%A\RV ^EOZ^
ME OFB4@ADA^RAJP A\P
AJP 1PORPYRHL_]] 0CMN_B 	 ^\YDFPOMTMFB4R^CEOTMC\	^ V^U@%SCWROPRHA6 R^ARHA6 A\PAJP	Y_] _
_
2  ^HWDA\  
^V ^ WQ6CMAT	MV^AQ^
ME OFB4@A@A^RAJP$ R^ARHA47A\PAJP	Y_] _
_
2  ^HWDA\  
^V ^ WQ6CMAT	MV^AQ^
ME OFB4@ACA^RAJP$R^ARHA77A\PAJP	Y_] _
_
2EM\ YDFPOMTMFB4R^CEOTM@ZB^
ME OFB4@ABA^RAJP%A\P
AJP%"PORPYRHL_]] 0F\  ^HWDA\  
^V ^ WQ6CMAT	MV^BJA	\	^ V^U@%SKA^RAJP%R^ARHA6;A\PAJP	Y_] _
_
2GM\ YDFPOMTMFB4R^CEOTMB\	^ V^U@%SJA^RAJP' R^ARHA49A\PAJP	Y_] _
_
2FM\ YDFPOMTMFB4R^CEOTMI@Z\	^ V^U@%SEA^RAJP! 
PORPYR0$R^A RHA J]LNN#P^MJFWCM	OEOU@%A\RV ^EOKW^
ME OFB4@FP\	APYR4 PORPYR41R^A RHA J]LNN#W^MJFWCM	OEOU@%A\RV ^EOPM \TMWQ6QWROPRHA9A\P
AJP*$PORPYRHL_]] 0B\  ^HWDA\  
^V ^ WQ6CMAT	MV^FPB\	^ V^U@%S@A^RAJP*A\P
AJP*4PORPYRHL_]] 0A\  ^HWDA\  
^V ^ WQ6CMAT	MV^K[@^
ME OFB4@AP-^AAJ)A Y_]MM_
]D]_
PORJ]L^] 
_W__L_LR/