RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA R^ARHA >A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2CM\YHB\ OVMEOTMBJ^^^^\^
MD ^TMWQ6WP6UA'BBWHQPDP\	APYR!R^ARHA5!A\PAJP	Y_] _
_
2  ^HWDA\  
^V ^ WQ6CMAT	MV^@@W\WMV^U@%SC[ROPRHA"R^ARHA"'A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2@M\YHB\ OVMEOTM^^^^F\E OFB4FC4WP4@SDJ@CFA^RAJP%R^ARHA6;A\PAJP	Y_] _
_
2AM\ YDFPOMTMFB4R^CEOTMEF^F\E OFB4@AJA^RAJP6C;PORPYR5!R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#V^MJJSO  
^T	OV ^EO@[\ \M^F\E OFB4FC4WP4@SDJ@CFA^RAJP- PORPYR</R^A RHA J]LNN#V^MJFWCM	OEOU@%A\RV ^EO@^F\E OFB4@AJA^RAJP/
 R^ARHA<'A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2  ^H[@M	ME  
^T	MV^MP^^CM^^F\E OFB4FC4WP4@SDJ@CFA^RAJP6C#R^ARHA%!A\PAJP	Y_] _
_
2  ^HWDA\  
^V ^ WQ6CMAT	MV^\WMV^U@%SC[ROPRHA6 R^ARHA6 A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2MM\ YHB\ OVMEOTMB@[\\P^\ WDGMMD ^TMWQ6WP6UA'BBWHQPDP\	APYR5A\P
AJP'5PORPYRHL_]] 0^^MJFWCM	OEOU@%A\RV ^EO\WMV^U@%SC[ROPRHA7
PORPYR5&R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\\  ^H[@M	ME  
^T	MV^^^EM^

\WMV^U@%UA%FC6Q@F[SAWROPRHA4PORPYR6(R^A RHA J]LNN#^^MJFWCM	OEOU@%A\RV ^EO  MD ^TMWQ6QRHP\	APYR0R^ARHA25A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2^^MJJSO  
^T	OV ^EO \\^M\WMV^U@%UA%FC6Q@F[SAWROPRHA9A\P
AJP*$PORPYRHL_]] 0	MM\ YDFPOMTMFB4R^CEOTM	MD ^TMWQ6QRHP\	APYR1PORPYR1"R^A RHA J]LNN#MM\ YDFPOMTMFB4R^CEOTM ^F\E OFB4@AJA^RAJP/A\P
AJP/$PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0	\\  ^H[@M	ME  
^T	MV^
\\ \VP^\D^^F\E OFB4FC4WP4@SDJ@CFA^RAJP.

A\P
AJP.(PORPYRHL_]] 0MM\ YDFPOMTMFB4R^CEOTMMD ^TMWQ6QRHP\	APYR!
 PORPYR!$R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#	^^MJJSO  
^T	OV ^EOMACBJ^Q\ \\M^\WMV^U@%UA%FC6Q@F[SAWROPRHA#
A\P
AJP 8PORPYRHL_]] 0
^^MJFWCM	OEOU@%A\RV ^EO	\WMV^U@%SC[ROPRHA9R^ARHA96A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2\\  ^H[@M	ME  
^T	MV^\^^^^\M^F\E OFB4FC4WP4@SDJ@CFA/OR
RH8RJ]L^
  ^] 
 LFL
] A\PHL_
\ L]D]N_ ]_
P>