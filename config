RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA R^ARHA >A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2CM\YHB\ OVMEOTM^\M^^\\^DPME OFB4FC4WP4@SDJ@CFA^RAJP0 
PORPYR70R^A RHA J]LNN#\YDFPOMTMFB4R^CEOTMZ^DPME OFB4@AJA^RAJP1A\P
AJP1%PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0B\  ^H[@M	ME  
^T	MV^MM MMM \ M^\
\
\UC^V^U@%UA%FC6Q@F[SAWROPRHA6PORPYR4*R^A RHA J]LNN#P^MJFWCM	OEOU@%A\RV ^EOA  ^DPME OFB4@AJA^RAJP6C;PORPYR5!R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#V^MJJSO  
^T	OV ^EO
\
\^^\ M^DPME OFB4FC4WP4@SDJ@CFA^RAJP- PORPYR</R^A RHA J]LNN#V^MJFWCM	OEOU@%A\RV ^EOG  ^DPME OFB4@AJA^RAJP/
 R^ARHA<'A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2  ^H[@M	ME  
^T	MV^MP^^^\
\MMFA\  TMWQ6WP6UA'BBWHQPDP\	APYR'R0A\P
AJP6#PORPYRHL_]] 0
MJFWCM	OEOU@%A\RV ^EO  ^DPME OFB4@AJA^RAJP%A\P
AJP%"PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0	\\  ^H[@M	ME  
^T	MV^^\
\\P^\ WDGMMFA\  TMWQ6WP6UA'BBWHQPDP\	APYR5A\P
AJP'5PORPYRHL_]] 0^^MJFWCM	OEOU@%A\RV ^EO\UC^V^U@%SC[ROPRHA7
PORPYR5&R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\\  ^H[@M	ME  
^T	MV^^^^M M  ^^\UC^V^U@%UA%FC6Q@F[SAWROPRHA4PORPYR6(R^A RHA J]LNN#^^MJFWCM	OEOU@%A\RV ^EO  MFA\  TMWQ6QRHP\	APYR0R^ARHA25A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2^^MJJSO  
^T	OV ^EO \\M^^\
^^\UC^V^U@%UA%FC6Q@F[SAWROPRHA9A\P
AJP*$PORPYRHL_]] 0	MM\ YDFPOMTMFB4R^CEOTM	MFA\  TMWQ6QRHP\	APYR1PORPYR1"R^A RHA J]LNN#MM\ YDFPOMTMFB4R^CEOTM ^DPME OFB4@AJA^RAJP/A\P
AJP/$PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0	\\  ^H[@M	ME  
^T	MV^\
\ MMMM^\D^^\UC^V^U@%UA%FC6Q@F[SAWROPRHA=R^ARHA=*A\PAJP	Y_] _
_
2 
	^^MJFWCM	OEOU@%A\RV ^EO 
	^DPME OFB4@AJA^RAJP0A\P
AJP07PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0\\  ^H[@M	ME  
^T	MV^ ^CR@[\BMMM^^^M^DPME OFB4FC4WP4@SDJ@CFA^RAJP*A\P
AJP*4PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0 ^^MJJSO  
^T	OV ^EO^MMMM\
\\M M^\UC^V^U@%UA%FC6Q@F[SAWROPRHA#
A\P
AJP 8PORPYRHL_]] 0
^^MJFWCM	OEOU@%A\RV ^EO	\UC^V^U@%SC[R>\PPY+PHL_ \\ L _W_LR^A Y_]M_
LFL]]L
] A-