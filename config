RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA#A\P
AJP&#PORPYRHL_]] 0MJFWCM	OEOU@%A\RV ^EO CKMMV^U@%SC[ROPRHA6PORPYR4*R^A RHA J]LNN#P^MJFWCM	OEOU@%A\RV ^EOA  A\  
\
E OFB4@AJA^RAJP6C;PORPYR5!R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#V^MJJSO  
^T	OV ^EO
\
\^^\ M^\
\\\ M ^\M^ ^TMWQ6WP6UA'BBWHQPDP\	APYR 
PORPYR 6R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#Q^MJJSO  
^T	OV ^EO
\\
\M^^^^^^^M^^\ ^\ M^^^ ^TMWQ6WP6UA'BBWHQPDP\	APYR<R^ARHA>>A\PAJP	Y_] _
_
2GM\YDFPOMTMFB4R^CEOTMEQ^ ^E OFB4@AJA^RAJP/
 R^ARHA<'A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2  ^H[@M	ME  
^T	MV^MP^^^\
\MM MMV^U@%UA%FC6Q@F[SAWROPRHA%
P!PORPYR'0R^A RHA J]LNN#\ YDFPOMTMFB4R^CEOTM
S^ ^TMWQ6QRHP\	APYR4 PORPYR41R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#
^^MJJSO  
^T	OV ^EO M^^^AM^FWE \\
\MMMM^^^\ ^
M^\ M ^M MMV^U@%UA%FC6Q@F[SAWROPRHA7	PORPYR6&R^A RHA J]LNN#MM\ YDFPOMTMFB4R^CEOTM MMV^U@%SC[ROPRHA7
PORPYR5&R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#\\  ^H[@M	ME  
^T	MV^^^^M M  ^^^\M^^^^^^\
\M^\
\  
\
E OFB4FC4WP4@SDJ@CFA^RAJP' R^ARHA49A\PAJP	Y_] _
_
2  MM\ YDFPOMTMFB4R^CEOTM^ ^TMWQ6QRHP\	APYR0R^ARHA25A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2^^MJJSO  
^T	OV ^EO \\M^^\
^^\ M M M^\ M M^^ ^TMWQ6WP6UA'BBWHQPDP\	APYR;R^ARHA9&A\PAJP	Y_] _
_
2^^MJFWCM	OEOU@%A\RV ^EO MMV^U@%SC[ROPRHA3R^ARHA33A\PAJP	Y_] _
_
2\\  ^HWDA\  
^V ^ WQ6CMAT	MV^
\  
\
E OFB4@AJA^RAJP/A\P
AJP/$PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0	\\  ^H[@M	ME  
^T	MV^\
\ MMMM^\^^^^^^M
\^^M MF\\
M MMV^U@%UA%FC6Q@F[SAWROPRHA=R^ARHA=*A\PAJP	Y_] _
_
2 
	^^MJFWCM	OEOU@%A\RV ^EO 
	 MMV^U@%SC[ROPRHA# R^ARHA#5A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2
MM\ YHB\ OVMEOTM
 \RAQHM@^^^\\
\
^\
\
^^^^\M M\M
\MM^^ ^TMWQ6WP6UA'BBWHQPDP\	APYR;
PORPYR;'R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#MM\ YHB\ OVMEOTMM\\ \\^^^\
\
M ^^ ^TMWQ6WP6UA'BBWHQPDP\	APYR! R^ARHA3:A\PAJP	Y_] _
_
2	\\  ^HWDA\  
^V ^ WQ6CMAT	MV^ 
\  
\
E OFB4@AJA^RAJP3A\P
AJP3<PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0A\  ^H[@M	ME  
^T	MV^^\M^^\\
\ MMM ^^M
\ ^M  ^^^^
M MMV^U@%UA%FC6Q@F[SAWR>\PPY+PHL_ \\ L _W_LR^A Y_]M_
LFL]]L
] A-