RPYP
-AJPHL_M^_($(!/@+LAKNB\	 A\P
RHAR^APYRJ]L\]

 ]Q@P\P  RH8PRHA R^ARHA >A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2CM\YHB\ OVMEOTM^\M^^\\^BMV^U@%UA%FC6Q@F[SAWROPRHA#A\P
AJP&#PORPYRHL_]] 0MJFWCM	OEOU@%A\RV ^EO I\ S^TMWQ6QRHP\	APYR 
PORPYR 6R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#Q^MJJSO  
^T	OV ^EO
\\
\ \\ ^\ M^^^BMV^U@%UA%FC6Q@F[SAWROPRHA6PORPYR4*R^A RHA J]LNN#P^MJFWCM	OEOU@%A\RV ^EOA  ^BMV^U@%SC[ROPRHA%
P9
A\P
AJP$2PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0E\  ^H[@M	ME  
^T	MV^ M M
\
\M^

\ S^TMWQ6WP6UA'BBWHQPDP\	APYR<R^ARHA>>A\PAJP	Y_] _
_
2GM\YDFPOMTMFB4R^CEOTMEM
@\
E OFB4@AJA^RAJP/
 R^ARHA<'A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2  ^H[@M	ME  
^T	MV^MP^^^\
\MM
@\
E OFB4FC4WP4@SDJ@CFA^RAJP6C#R^ARHA%!A\PAJP	Y_] _
_
2  ^HWDA\  
^V ^ WQ6CMAT	MV^\ S^TMWQ6QRHP\	APYR4 PORPYR41R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#
^^MJJSO  
^T	OV ^EO M^^^AM^FWE \\ S^TMWQ6WP6UA'BBWHQPDP\	APYR5A\P
AJP'5PORPYRHL_]] 0^^MJFWCM	OEOU@%A\RV ^EO\ S^TMWQ6QRHP\	APYR5 A\P
AJP$5PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0MM\ YHB\ OVMEOTM\\\
^^
\
\
M
@\
E OFB4FC4WP4@SDJ@CFA^RAJP' R^ARHA49A\PAJP	Y_] _
_
2  MM\ YDFPOMTMFB4R^CEOTM\ S^TMWQ6QRHP\	APYR0R^ARHA25A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2^^MJJSO  
^T	OV ^EO \\M^^\
^^\ S^TMWQ6WP6UA'BBWHQPDP\	APYR;R^ARHA9&A\PAJP	Y_] _
_
2^^MJFWCM	OEOU@%A\RV ^EO^BMV^U@%SC[ROPRHA3R^ARHA33A\PAJP	Y_] _
_
2\\  ^HWDA\  
^V ^ WQ6CMAT	MV^M
@\
E OFB4@AJA^RAJP/A\P
AJP/$PORPYRJ]LB CCSEANCZF_WDDW]@DNACSI@B0	\\  ^H[@M	ME  
^T	MV^\
\ MMMM^\D^^\ S^TMWQ6WP6UA'BBWHQPDP\	APYR? PORPYR?;R^A RHA J]LNN#
\\  ^HWDA\  
^V ^ WQ6CMAT	MV^
\ S^TMWQ6QRHP\	APYR!
 PORPYR!$R^A RHAY_]QPABVC_PKU]FWFFNSF_RABZSQ#	^^MJJSO  
^T	OV ^EOMACBJ^Q\ \\MM M\
M
@\
E OFB4FC4WP4@SDJ@CFA^RAJP0
PORPYR1+R^A RHA J]LNN# MM\ YDFPOMTMFB4R^CEOTM
^BMV^U@%SC[ROPRHA9R^ARHA96A\PAJPHL_@AR@GP]AIDNDFUD_BU]CR@K B@2\\  ^H[@M	ME  
^T	MV^\^^^^M MM^^\M
@\
E OFB4FC4WP4@SDJ@CFA/OR
RH8RJ]L^
  ^] 
 LFL
] A\PHL_
\ L]D]N_ ]_
P>